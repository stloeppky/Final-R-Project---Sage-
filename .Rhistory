# making them transparent
?rgb
means.all <- c(mean.canada, mean.japan, mean.brazil, mean.isreal, mean.egypt, mean.belgium)
# creating a bar plot
barplot(mean.all)
means.all <- c(mean.canada, mean.japan, mean.brazil, mean.isreal, mean.egypt, mean.belgium)
# creating a bar plot
barplot(mean.all)
# creating a bar plot
barplot(means.all)
# creating a bar plot
barplot(means.all, xlab = "Countries") # how do I make this better?
#histograms for each country
hist.canada <- hist(Canada$energy, breaks = 20)
hist.japan <- hist(Japan$energy, breaks = 20)
hist.brazil <- hist(Brazil$energy, breaks = 20)
hist.isreal <- hist(Isreal$energy, breaks = 20)
hist.egypt <- hist(Egypt$energy, breaks = 20)
hist.belgium <- hist(Belgium$energy, breaks = 20)
# creating a bar plot
barplot(means.all, xlab = "Countries") # how do I make this better?
names <- c(Canada, Japan, Brazil, Isreal, Egypt, Belgium)
# creating a bar plot
barplot(means.all, xlab = "Countries", names.arg = names) # how do I make this better?
names <- c(Canada, Japan, Brazil, Isreal, Egypt, Belgium)
# creating a bar plot
barplot(means.all, xlab = "Countries", names.arg = names) # how do I make this better?
names <- c("Canada", "Japan", "Brazil", "Isreal", "Egypt", "Belgium")
# creating a bar plot
barplot(means.all, xlab = "Countries", names.arg = names) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", names.arg = names, col = blues9) # how do I make this better?
#download gg ridges
intall.package(ggridges)
#download gg ridges
install.package(ggridges)
#download gg ridges
install.packages(ggridges)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy"" names.arg = names, col = blues9) # how do I make this better?
#download gg ridges
install.packages(ggridges)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9, width = .5) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9, width = .25) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9, width = .25) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9, width = 2) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9, width = 1) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9, width = 5) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1),  width = (3), names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1),  width = (2), names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1),  width = 2, names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1),  width = 10, names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1),  width = 2, names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), bins = 2, names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), bins = 3, names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), bins(3), names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9, width = c(2, 2, 2, 2, 2, 2)) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
install.packages(maptools)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
hist(Canada$energy, col='light blue', ylim=c(0,15), xlim = c(0, 1), main='Multiple Histograms')
hist(Brazil$energy, col='pink',  add=TRUE)
hist(Egypt$energy, col = 'red', add=TRUE)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
geom_density(
mapping = NULL,
data = can.energy,
stat = "density",
position = "identity",
...,
na.rm = FALSE,
orientation = NA,
show.legend = NA,
inherit.aes = TRUE,
outline.type = "upper"
)
install.packages(ggridges)
install.packages("ggridges")
data <- data.frame(x = 1:5, y = rep(1, 5), height = c(0, 1, 3, 4, 2))
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
data <- data.frame(means.all)
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
data <- data.frame(means.all)
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
df.canada <- Canada$energy
ggplot(data = df.canada, aes(x = Canada.energy)) +
geom_ridgeline()
df.canada <- Canada$energy
ggplot(data = NULL, aes(x = Canada.energy)) +
geom_ridgeline()
data <- data.frame(x = 1:6, y = rep(0, 1), height = c(Canada$energy))
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
data <- data.frame(x = 1:6, y = rep(0, 1), height = c(0, 1, 3, 4, 2))
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
ata <- data.frame(x = 1:6, y = rep(0, 1), height = c(0, 1, 3, 4, 2))
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
data <- data.frame(x = 1:5, y = rep(1, 5), height = c(0, 1, 3, 4, 2))
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
data <- data.frame(x = 1:5, y = rep(1, 5), height = c(means.all))
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
data <- data.frame(x = 1:5, y = rep(1, 5), height = c(5, 5, 5, 5))
ggplot(data, aes(x, y, height = height)) + geom_ridgeline()
ggplot(means.all, aes(x, y, height = height)) + geom_ridgeline()
df.means.all <- data.frame(means.all)
e.canada <- Canada$energy
e.japan <- Japan$energy
e.brazil <- Brazil$energy
e.isreal <- Isreal$energ
e.egypt <- Egypt$energy
e.belgium <- Belgium$energy
df.e.all <- data.frame(e.canada, e.japan, e.brazil, e.isreal, e.egypt, e.belgium)
e.isreal <- Isreal$energy
df.e.all <- data.frame(e.canada, e.japan, e.brazil, e.isreal, e.egypt, e.belgium)
View(df.e.all)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
#histograms for each country
hist.canada <- hist(Canada$energy, breaks = 20)
hist(Canada$energy, col='light blue', ylim=c(0,15), xlim = c(0, 1), main='Multiple Histograms')
hist(Brazil$energy, col='pink',  add=TRUE)
hist(Egypt$energy, col = 'red', add=TRUE)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
select(track.name, instrumentalness, danceability, acousticness)
c <- Canada %>%
#arrange(-instrumentalness) %>%
select(track.name, instrumentalness, danceability, acousticness)
c <- add_column(c, "Canada")
names(c)[3] <- "Danceability"
names(c)[4] <- "Acousticness"
names(c)[5] <- "Country"
j <- Japan %>%
#arrange(-instrumentalness) %>%
select(track.name, instrumentalness, danceability, acousticness)
j <- add_column(j, "Japan")
names(j)[3] <- "Danceability"
names(j)[4] <- "Acousticness"
names(j)[5] <- "Country"
bel <- Belgium %>%
#arrange(-instrumentalness) %>%
select(track.name, instrumentalness, danceability, acousticness)
bel <- add_column(bel, "Belgium")
names(bel)[3] <- "Danceability"
names(bel)[4] <- "Acousticness"
names(bel)[5] <- "Country"
e <- Egypt %>%
#arrange(-instrumentalness) %>%
select(track.name, instrumentalness, danceability, acousticness)
e <- add_column(e, "Egypt")
names(e)[3] <- "Danceability"
names(e)[4] <- "Acousticness"
names(e)[5] <- "Country"
bra <- Brazil %>%
#arrange(-instrumentalness) %>%
select(track.name, instrumentalness, danceability, acousticness)
bra <- add_column(bra, "Brazil")
names(bra)[3] <- "Danceability"
names(bra)[4] <- "Acousticness"
names(bra)[5] <- "Country"
i <- Isreal %>%
#arrange(-instrumentalness) %>%
select(track.name, instrumentalness, danceability, acousticness)
i <- add_column(i, "Israel")
names(i)[3] <- "Danceability"
names(i)[4] <- "Acousticness"
names(i)[5] <- "Country"
# Combining all the individual data sets into one full data set
fulllist <- rbind(c, j, bel, e, bra, i)
View(fulllist)
View(fulllist)
View(fulllist)
ggplot(data = fulllist, aes(x = Danceability, y = Acousticness, colour = Country, fill = Country)) +
geom_point(shape = 19, size = 2, alpha = 0.8) +
xlim(0,1) +
ylim(0,1) +
labs(title = "Danceability & Acousticness of Songs by Country") +
theme_minimal()
dance <- ggplot(data = fulllist, aes(Danceability, Country, fill = Country, colour = Country)) +
stat_density_ridges(quantiles = 2, quantile_lines = TRUE, alpha = 0.8, scale = 1.5, rel_min_height = 0.01) +
labs(title = "Danceability of the Top 50 songs by Country") +
xlim(0,1)
acous <- ggplot(data = fulllist, aes(Acousticness, Country, fill = Country, colour = Country)) +
stat_density_ridges(quantiles = 2, quantile_lines = TRUE, alpha = 0.8, scale = 1.5, rel_min_height = 0.01) +
labs(title = "Acousticness of the Top 50 songs by Country") +
xlim(0,1)
ggplot(fulllist, aes(x = Danceability, fill = Country, colour = Country)) +
geom_density(alpha = 0.3)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
ggplot(fulllist, aes(x = Danceability, fill = Country, colour = Country)) +
geom_density(alpha = 0.3)
sd <- ggplot(fulllist, aes(x = Acousticness, fill = Country, colour = Country)) +
geom_density(alpha = 0.3, position = "stack")
ggarrange(sd, acous)
# Visualizing two plots next to eachother
ggarrange(sd, acous)
c <- add_column(c, "Canada")
names(c)[3] <- "energy"
names(c)[4] <- "mode"
names(c)[5] <- "Country"
View(fulllist)
hist(Canada$energy, col='light blue', ylim=c(0,15), xlim = c(0, 1), main='Multiple Histograms')
hist(Brazil$energy, col='pink',  add=TRUE)
hist(Egypt$energy, col = 'red', add=TRUE)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy of top 50", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
# reading in the first of the Salmon Data - Cultus lake average abundance through time
read.csv("Average_Abundance:Run_Size_Cultus_Late.cvs")
# reading in the first of the Salmon Data - Cultus lake average abundance through time
read.csv("Average_Abundance:Run_Size_Cultus_Lake.cvs")
# reading in the first of the Salmon Data - Cultus lake average abundance through time
read.csv("Average_Abundance:Run_Size_Cultus_Lake.cvs")
source("~/Desktop/Data Analysis in R/CVS Files/Average_Abundance:Run_Size_Cultus_Lake.csv", encoding = 'UTF-8')
library()
wd <- getwd()
getwd()
setwd("~/Desktop/Data Analysis in R")
read.csv("Average_Abundance:Run_Size_Cultus_Lake.cvs")
wd <- getwd()
getwd()
setwd("~/Desktop/Data Analysis in R/CVS Files")
read.csv("Average_Abundance:Run_Size_Cultus_Lake.cvs")
wd
folder.names <- c("a.fp.data.raw","b.fp.data.clean", "c.fp.results","d.fp.figures")
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
setwd("~/Desktop/Data Analysis in R")
folder.names <- c("a.fp.data.raw","b.fp.data.clean", "c.fp.results","d.fp.figures")
# create folders if they don't exit yet.
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
# create workflow
folder.names <- c("a.fp.data.raw","b.fp.data.clean", "c.fp.results","d.fp.figures")
# create folders if they don't exit yet.
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
# create workflow
folder.names <- c("a.fp.data.raw","b.fp.data.clean", "c.fp.results","d.fp.figures", "e.fp.rscripts)
# create folders if they don't exit yet.
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
# reading in the first of the Salmon Data - Cultus lake average abundance through time
wd <- getwd()
read.csv("Average_Abundance:Run_Size_Cultus_Lake.cvs")
# create folders if they don't exit yet.
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
getwd()
setwd("~/Desktop/Data Analysis in R/Final R Project")
# create workflow
folder.names <- c("a.fp.data.raw","b.fp.data.clean", "c.fp.results","d.fp.figures", "e.fp.rscripts")
# create folders if they don't exit yet.
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
read.csv("Average_Abundance:Run_Size_Cultus_Lake.cvs")
# create workflow
folder.names <- c("a.fp.data.raw","b.fp.data.clean", "c.fp.results","d.fp.figures", "e.fp.rscripts", "f.fp.cvs")
# create folders if they don't exit yet.
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
getwd()
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
getwd()
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
`Average_Abundance:Run_Size_Cultus_Lake` <- read.csv("~/Desktop/Data Analysis in R/Final R Project/f.fp.cvs/Average_Abundance:Run_Size_Cultus_Lake.csv")
View(`Average_Abundance:Run_Size_Cultus_Lake`)
read.csv("Average_Abundance:Run_Size_Cultus_Lake")
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
getwd()
p.fp.data.raw <- paste(wk.dir, "/", folder.names[1], "/", sep = "")
p.fp.data.clean <- paste(wk.dir, "/", folder.names[2], "/", sep = "")
p.fp.results <- paste(wk.dir, "/", folder.names[3], "/", sep = "")
p.fp.figures <- paste(wk.dir, "/", folder.names[4], "/", sep = "")
p.fp.rscripts <- paste(wk.dir, "/", folder.names[5], "/", sep = "")
p.fp.cvs <- paste(wk.dir, "/", folder.names[6], "/", sep = "")
p.fp.rscripts <- paste(wk.dir, "/", folder.names[5], "/", sep = "")
p.fp.figures <- paste(wk.dir, "/", folder.names[4], "/", sep = "")
p.fp.results <- paste(wk.dir, "/", folder.names[3], "/", sep = "")
p.fp.data.raw <- paste(wd, "/", folder.names[1], "/", sep = "")
p.fp.data.clean <- paste(wd, "/", folder.names[2], "/", sep = "")
p.fp.results <- paste(wd, "/", folder.names[3], "/", sep = "")
p.fp.figures <- paste(wd, "/", folder.names[4], "/", sep = "")
p.fp.rscripts <- paste(wd, "/", folder.names[5], "/", sep = "")
p.fp.cvs <- paste(wd, "/", folder.names[6], "/", sep = "")
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
hist(Canada$energy, col='light blue', ylim=c(0,15), xlim = c(0, 1), main='Multiple Histograms')
hist(Brazil$energy, col='pink',  add=TRUE)
hist(Egypt$energy, col = 'red', add=TRUE)
ggplot(fulllist, aes(x = Danceability, fill = Country, colour = Country)) +
geom_density(alpha = 0.3)
hist(Canada$energy, col='light blue', ylim=c(0,15), xlim = c(0, 1), main='Multiple Histograms')
hist(Brazil$energy, col='pink',  add=TRUE)
hist(Egypt$energy, col = 'red', add=TRUE)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy of top 50", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
hist(Canada$energy, col='light blue', ylim=c(0,15), xlim = c(0, 1), main='Multiple Histograms')
hist(Brazil$energy, col='pink',  add=TRUE)
hist(Egypt$energy, col = 'red', add=TRUE)
wd
setwd("~/Desktop/Data Analysis in R/Final R Project")
getwd()
wd <- getwd()
# create workflow
folder.names <- c("a.fp.data.raw","b.fp.data.clean", "c.fp.results","d.fp.figures", "e.fp.rscripts", "f.fp.cvs")
# create folders if they don't exit yet.
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
# paths to the folders. The 'p.' indicates the variable is a path.
# make sure the variable names describe the folder.names
p.fp.data.raw <- paste(wd, "/", folder.names[1], "/", sep = "")
p.fp.data.clean <- paste(wd, "/", folder.names[2], "/", sep = "")
p.fp.results <- paste(wd, "/", folder.names[3], "/", sep = "")
p.fp.figures <- paste(wd, "/", folder.names[4], "/", sep = "")
p.fp.rscripts <- paste(wd, "/", folder.names[5], "/", sep = "")
p.fp.cvs <- paste(wd, "/", folder.names[6], "/", sep = "")
read.csv(`Average_Abundance:Run_Size_Cultus_Lake.csv`)
read.csv(`Average_Abundance:Run_Size_Cultus_Lake`)
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
getwd()
p.fp.data.raw <- paste(wd, "/", folder.names[1], "/", sep = "")
p.fp.data.clean <- paste(wd, "/", folder.names[2], "/", sep = "")
p.fp.results <- paste(wd, "/", folder.names[3], "/", sep = "")
p.fp.figures <- paste(wd, "/", folder.names[4], "/", sep = "")
p.fp.rscripts <- paste(wd, "/", folder.names[5], "/", sep = "")
p.fp.cvs <- paste(wd, "/", folder.names[6], "/", sep = "")
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
getwd()
read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
View(`Average_Abundance:Run_Size_Cultus_Lake`)
AA.Cultus <- read.csv("Average_Abundance:Run_Size_Cultus_Lake.csv")
range(AA.Cultus$year)
# reading in the climate data - Cultus Lake
Climate.Data.Cultus <- read.csv("Monthly.Climate.Data.Cultus.Lake.csv")
View(Climate.Data.Cultus)
View(Climate.Data.Cultus)
View(Climate.Data.Cultus)
# find range in years
range(Climate.Data.Cultus$Year)
View(c)
climate.data.cultus <- Climate.Data.Cultus %>%
#arrange(-year) %>%
select(Station.Name, Year, Mean.Max.Temp...C., Total.Precip..mm.)
View(climate.data.cultus)
View(AA.Cultus)
p.fp.data.raw
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy of top 50", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
plot(df.e.all)
barplot(df.e.all)
hist(df.e.all)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy of top 50", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
canada.data <- Canada %>%
select(track.name, energy, mode)
canada.data <- add_column(canada.data, "Canada")
names(canada.data)[5] <- "Country"
canada.data <- add_column(canada.data, "Canada")
names(canada.data)[4] <- "Country"
canada.data <- Canada %>%
select(track.name, energy, mode)
canada.data <- add_column(canada.data, "Canada")
names(canada.data)[4] <- "Country"
japan.data <- japan.data %>%
select(track.name, energy, mode)
japan.data <- japan.data %>%
select(track.name, energy, mode)
japan.data <- Japan %>%
select(track.name, energy, mode)
japan.data <- add_column(japan.data, "Japan")
names(canada.data)[4] <- "Country"
# Brazil
brazil.data <- Brazil %>%
select(track.name, energy, mode)
# Brazil
brazil.data <- Brazil %>%
select(track.name, energy, mode)
brazil.data <- add_column(brazil.data, "Brazil")
names(brazil.data)[4] <- "Country"
# Israel
israel.data <- Isreal %>%
select(track.name, energy, mode)
# Israel
israel.data <- Isreal %>%
select(track.name, energy, mode)
israel.data <- add_column(israel.data, "Isreal")
names(israel.data)[4] <- "Country"
# Egypt
egypt.data <- Egypt %>%
select(track.name, energy, mode)
# Egypt
egypt.data <- Egypt %>%
select(track.name, energy, mode)
egypt.data <- add_column(egypt.data, "Egypt")
names(egypt.data)[4] <- "Country"
# Belgium
belgium.data <- Belgium %>%
select(track.name, energy, mode)
# Belgium
belgium.data <- Belgium %>%
select(track.name, energy, mode)
belgium.data <- add_column(belgium.data, "Belgium")
names(belgium.data)[4] <- "Country"
View(canada.data)
all.countries <- rbind(canada.data, japan.data, brazil.data, israel.data, egypt.data, belgium.data)
View(canada.data)
View(brazil.data)
View(egypt.data)
View(israel.data)
View(japan.data)
japan.data <- add_column(japan.data, "Japan")
names(japan.data)[4] <- "Country"
japan.data <- add_column(japan.data, "Japan")
names(japan.data)[4] <- "Country"
all.countries <- rbind(canada.data, japan.data, brazil.data, israel.data, egypt.data, belgium.data)
all.countries <- rbind(canada.data, japan.data, brazil.data, israel.data, egypt.data, belgium.data)
View(belgium.data)
View(brazil.data)
View(canada.data)
View(egypt.data)
View(fulllist)
View(israel.data)
View(japan.data)
japan.data <- Japan %>%
select(track.name, energy, mode)
japan.data <- add_column(japan.data, "Japan")
names(japan.data)[4] <- "Country"
all.countries <- rbind(canada.data, japan.data, brazil.data, israel.data, egypt.data, belgium.data)
View(all.countries)
ggplot(all.countries, aes(x = energy, fill = Country, colour = Country)) +
geom_density(alpha = 0.3)
ggplot(data = all.countries, aes(energy, Country, fill = Country, colour = Country)) +
stat_density_ridges(quantiles = 2, quantile_lines = TRUE, alpha = 0.8, scale = 1.5, rel_min_height = 0.01) +
xlim(0, 1)
ggplot(data = all.countries, aes(energy, Country, fill = Country, colour = Country)) +
stat_density_ridges(quantiles = 2, quantile_lines = TRUE, alpha = 0.8, scale = 2, rel_min_height = 0.01) +
xlim(0, 1)
ggplot(data = all.countries, aes(energy, Country, fill = Country, colour = Country)) +
stat_density_ridges(quantiles = 2, quantile_lines = TRUE, alpha = 0.8, scale = 200, rel_min_height = 0.01) +
xlim(0, 1)
ggplot(data = all.countries, aes(energy, Country, fill = Country, colour = Country)) +
stat_density_ridges(quantiles = 2, quantile_lines = TRUE, alpha = 0.8, scale = 1.5, rel_min_height = 0.01) +
xlim(0, 1)
ggplot(all.countries, aes(x = energy, fill = Country, colour = Country)) +
geom_density(alpha = 0.3)
ggplot(data = all.countries, aes(energy, Country, fill = Country, colour = Country)) +
stat_density_ridges(quantiles = 2, quantile_lines = TRUE, alpha = 0.8, scale = 1.5, rel_min_height = 0.01) +
xlim(0, 1)
ggplot(all.countries, aes(x = energy, fill = Country, colour = Country)) +
geom_density(alpha = 0.3)
View(all.countries)
View(belg.energy)
View(Belgium)
ggplot(data = all.countries, aes(energy, Country, fill = Country, colour = Country)) +
stat_density_ridges(quantiles = 2, quantile_lines = TRUE, alpha = 0.8, scale = 1.5, rel_min_height = 0.01) +
xlim(0, 1)
# creating a bar plot
barplot(means.all, xlab = "Countries", ylab = "Mean Energy of top 50", ylim = c(0, 1), names.arg = names, col = blues9) # how do I make this better?
